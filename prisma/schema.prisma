// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  STUDENT
  PROFESSOR
  STAFF
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  role          Role      @default(STUDENT)
  itemsLended   Item[]

  loansLended   Loan[]    @relation("LoanLended")
  loansTaken    Loan[]    @relation("LoanTaken")
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Status {
  AVAILABLE
  ARCHIVED
  LENDED
}

model Item {
  id String @id @default(cuid())

  lendedBy User @relation(fields: [lendedById], references: [id])
  lendedById String

  name String
  description String
  status Status @default(AVAILABLE)

  loans Loan[]

  keywords String[]
  tags String[]
}

model Loan {
  id String @id @default(cuid())

  item Item @relation(fields: [itemId], references: [id])
  itemId String

  lendedTo User @relation("LoanLended", fields: [lendedToId], references: [id])
  lendedToId String

  lendedBy User @relation("LoanTaken", fields: [lendedById], references: [id])
  lendedById String

  expiresBy DateTime
}